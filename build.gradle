//Query DSL 3버전 부터 추가
buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.8'
	id 'io.spring.dependency-management' version '1.1.4'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10" //Query DSL 3버전 부터 추가
}

group = 'ex.wookis'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

// 라이브러리 버전 교체
ext["hibernate.version"] = "6.2.20.Final"

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'	//thymeleaf 사용
	implementation 'org.springframework.boot:spring-boot-starter-validation'	//validation 사용
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc' //JDBC 사용
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'	//JPA 추가
	
	//MySQL Driver 사용
	//runtimeOnly 'com.mysql:mysql-connector-j'

	//H2 Database 추가
	runtimeOnly 'com.h2database:h2'

	//MyBatis 추가
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.1'

	//QueryDSL 추가 [Spring boot 3.x 버전 이상]
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	//테스트에서 lombok 사용
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

// Querydsl 설정부
def querydslDir = 'src/main/generated'

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {
	main.java.srcDirs  querydslDir
}

compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

// querydsl QClass 파일 생성 위치를 지정
//tasks.withType(JavaCompile) {
//	options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
//}